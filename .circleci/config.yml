version: 2.1

executors:
  node-pg-executor:
    docker:
      - image: cimg/node:15.11.0
        environment:
          PORT: 3333
          PG_USER: postgres
          PG_HOST: localhost
          PG_PORT: 5432
          PG_DATABASE: snack_a_log
          TEST_DATABASE_URL: postgresql://postgres@localhost/snack_a_log
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_DB: snack_a_log
          POSTGRES_USER: postgres

commands:
  backend_initialization:
    description: Setup database and run server
    steps:
      - checkout
      - run:
          name: Install backend deps
          command: cd ./back-end && npm install
      # Install dockerize
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      # Wait for Postgres connection to open.
      - run: dockerize -wait tcp://$PG_HOST:$PG_PORT -timeout 1m
      # Install psql client
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client
      # Create schema and seed the database
      - run: psql -d $TEST_DATABASE_URL -f ./back-end/db/schema.sql
      - run: psql -d $TEST_DATABASE_URL -f ./back-end/db/seed.sql
      - run:
          name: Start server
          command: node ./back-end/server.js
          background: true
      # Wait for server
      - run: dockerize -wait http://localhost:3333 -timeout 1m

jobs:
  build_and_test_backend:
    executor: node-pg-executor
    working_directory: ~/repo
    steps:
      - checkout
      - backend_initialization
      - run:
          command: cd back-end && npm test
          name: Test backend

workflows:
  build_and_test:
    jobs:
      - build_and_test_backend
      - cypress/run:
          executor: node-pg-executor
          working_directory: front-end
          cache-key: cache-v2-{{ arch }}-{{ .Branch }}-{{ checksum "front-end/package.json" }}
          start: PORT=3000 npm start
          wait-on: http://localhost:3000
          pre-steps:
            - backend_initialization
            - run: sudo apt-get install libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
            # the last line ^^ is for cypress:
            # https://docs.cypress.io/guides/continuous-integration/introduction#Dependencies
