name: GitHub Actions for Back-End with Postgres
# Reference docs
# https://docs.github.com/en/actions/using-containerized-services/creating-postgresql-service-containers
run-name: ${{ github.actor }} is testing out the snack-a-log app
on:
  pull_request:
    branches: [main]
jobs:
  # Label of the container job
  ############## START BACK-END  TESTS #################
  backend-w-postgres-test-job:
    # Set a reasonable timeout in case something goes wrong
    timeout-minutes: 5
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-22.04
    # Docker Hub image that `container-job` executes in
    container: node:16.17-bullseye
    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      # Downloads a copy of the code in your repository before running CI tests
      - name: Clone repository code to this container
        uses: actions/checkout@v3
      # Performs a clean installation of all dependencies in the `package.json` file
      # For more information, see https://docs.npmjs.com/cli/ci.html
      - name: Install dependencies
        working-directory: ./back-end
        run: npm ci
      - name: Set up the database, create table and seed data
        working-directory: ./back-end
        run: node ./db/ci_setup.js
        env:
          PORT: 8675
          PG_HOST: postgres
          PG_PORT: 5432
          PG_DATABASE: postgres
          PG_USER: postgres
          PG_PASSWORD: postgres
      - name: Run back-end tests
        working-directory: ./back-end
        run: npm test
        # environmental variables must be duplicated for every step
        env:
          PORT: 8675
          PG_HOST: postgres
          PG_PORT: 5432
          PG_DATABASE: postgres
          PG_USER: postgres
          PG_PASSWORD: postgres
  ############## END BACK-END  TESTS #################
  ############## START FULL STACK TESTS ##############
  backend-with-front-end-job:
    name: Back-end set up and run for front-end
    needs: backend-w-postgres-test-job
    # needs: backend-w-postgres-test-job
    timeout-minutes: 5
    # Containers must run in Linux based operating systems
    runs-on: ubuntu-22.04
    # Docker Hub image that `container-job` executes in
    container: node:16.17-bullseye
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Clone repository code to this container
        uses: actions/checkout@v3
      - name: Update Ubantu (for Cypress)
        run: apt update -y
      - name: Install extra dependencies for Cypress
        run: yes  | apt-get install xvfb libnss3-dev libgdk-pixbuf2.0-dev libgtk-3-dev libxss-dev libgbm-dev libasound2 --force-yes
      - name: Install dependencies for back-end
        working-directory: ./back-end
        run: npm ci
      - name: Set up the database
        working-directory: ./back-end
        run: node ./db/ci_setup.js
        env:
          PORT: 8675
          PG_HOST: postgres
          PG_PORT: 5432
          PG_DATABASE: postgres
          PG_USER: postgres
          PG_PASSWORD: postgres
      - name: Run server in background
        working-directory: ./back-end
        # The ampersand is what allows the process to run in the background
        run: npm start &
        env:
          PORT: 8675
          PG_HOST: postgres
          PG_PORT: 5432
          PG_DATABASE: postgres
          PG_USER: postgres
          PG_PASSWORD: postgres
      - name: Cypress tests
        uses: cypress-io/github-action@v2
        with:
          working-directory: ./front-end
          quiet: false
          headless: true
          record: false
          start: npm start
          wait-on: http://localhost:3000
          wait-on-timeout: 180
          env: true
        env:
          REACT_APP_API_URL: http://localhost:8675
